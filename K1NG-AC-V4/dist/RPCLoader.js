"use strict";onNet("rpc:invoke",(receiverName,native,type,args)=>{try{let result;switch(type){case"int":result=Citizen.invokeNative(native,args,Citizen.resultAsInteger());break;case"float":result=Citizen.invokeNative(native,args,Citizen.resultAsFloat());break;case"vector":result=Citizen.invokeNative(native,args,Citizen.resultAsVector());break;case"string":result=Citizen.invokeNative(native,args,Citizen.resultAsString());break;default:result=Citizen.invokeNative(native,args,Citizen.returnResultAnyway());break}emitNet(receiverName,result)}catch{emitNet(receiverName,void 0)}});
